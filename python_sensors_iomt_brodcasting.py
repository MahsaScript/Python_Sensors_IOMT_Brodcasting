# -*- coding: utf-8 -*-
"""Python_Sensors_IOMT_Brodcasting.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18xI3IfMHznPJ7x8WFUAcrJrEUB5o2L23
"""

import simCore as core
def upwardBrodcasting(sensors, model, packetType):
    sendersID = [i for i in range(model.n)]            # All Sensors
    for i in sendersID:
        sender = sensors[i]
        core.sendPacket(sensors, model, sender, packetType)
        visited = [sender.id]
        Neighbours = sender.findNeighbours()              # Neighbours
        count = 0

        while Neighbours:
            #count+=1
            #print(count)
            n = Neighbours.pop(0)
            print(n)
            core.sendPacket(sensors, model, sensors[n], packetType )
            visited.append(n)
            nn = sensors[n].findNeighbours()
            for item in nn:
                if ((item not in Neighbours) and (item not in visited)):
                    Neighbours.append(item)

    return sensors

def downwardBrodcasting(sensors, model, packetType='Hello'):
    senderID = model.n + model.n * model.m                        # Sink
    sender = sensors[senderID]
    core.sendPacket(sensors, model, sender, packetType)
    visited = [sender.id]
    Neighbours = sender.findNeighbours()              # Neighbours
    count = 0

    while Neighbours:
        #count+=1
        #print(count)
        n = Neighbours.pop(0)
        print(n)
        core.sendPacket(sensors, model, sensors[n], packetType )
        visited.append(n)
        nn = sensors[n].findNeighbours()
        for item in nn:
            if ((item not in Neighbours) and (item not in visited)):
                Neighbours.append(item)


    return sensors